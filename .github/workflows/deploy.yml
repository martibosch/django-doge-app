name: deploy

on:
  push:
    branches: [ "stage", "main" ]
    paths-ignore: [ "docs/**" ]


jobs:
  inform-about-apply:
    name: inform about apply
    runs-on: ubuntu-latest
    steps:
      - name: inform on PR that apply is running
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ***Running terraform apply***
            Results will display here momentarily...

  extract-branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:

      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

  deploy-stage:
    needs: extract-branch
    environment: stage
    runs-on: ubuntu-latest
    if: ${{ needs.extract-branch.outputs.branch == 'stage' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: get production dotenv files from secrets
        uses: ./.github/actions/prod-dotenv
        with:
          prod-django: ${{ secrets.PROD_DJANGO }}
          prod-postgres: ${{ secrets.PROD_POSTGRES }}
          prod-traefik: ${{ secrets.PROD_TRAEFIK }}
      - name: get staging dotenv files from secrets
        uses: ./.github/actions/stage-dotenv
        with:
          stage-django: ${{ secrets.STAGE_DJANGO }}
          stage-traefik: ${{ secrets.STAGE_TRAEFIK }}
      - name: plan and apply stage
        uses: ./.github/actions/deploy
        with:
          tf-api-token: ${{ secrets.TF_API_TOKEN }}
          ssh-key: ${{ secrets.SSH_KEY }}
          droplet-host: ${{ secrets.DROPLET_HOST }}
          env: stage
          github-token: ${{ secrets.GITHUB_TOKEN }}
          droplet-user: ${{ secrets.DROPLET_USER }}
          compose-config-args: "-f production.yml -f staging.yml"

  deploy-prod:
    needs: extract-branch
    environment: prod
    runs-on: ubuntu-latest
    if: ${{ needs.extract-branch.outputs.branch == 'main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: get production dotenv files from secrets
        uses: ./.github/actions/prod-dotenv
        with:
          prod-django: ${{ secrets.PROD_DJANGO }}
          prod-postgres: ${{ secrets.PROD_POSTGRES }}
          prod-traefik: ${{ secrets.PROD_TRAEFIK }}
      - name: plan and apply prod
        uses: ./.github/actions/deploy
        with:
          tf-api-token: ${{ secrets.TF_API_TOKEN }}
          ssh-key: ${{ secrets.SSH_KEY }}
          droplet-host: ${{ secrets.DROPLET_HOST }}
          env: prod
          github-token: ${{ secrets.GITHUB_TOKEN }}
          droplet-user: ${{ secrets.DROPLET_USER }}
          compose-config-args: "-f production.yml"
