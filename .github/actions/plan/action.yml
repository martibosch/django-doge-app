name: plan
description: Github Action to build (Docker) and plan (Terraform) changes.
branding:
  icon: 'cloud'
  color: 'orange'
inputs:
  compose-config-args:
    description: 'Docker compose config arguments. Example: "-f production.yml".'
    required: true
  tf-version:
    description: 'Terraform version. Example: "1.3.4".'
    required: false
    default: "1.3.4"
  tf-api-token:
    description: 'Terraform cloud API token.'
    required: true
  ssh-key:
    description: 'SSH key.'
    required: true
  droplet-host:
    description: 'Host of the droplet. Example: "172.16.254.1".'
    required: true
  env:
    description: 'Environment. Example: "prod".'
    required: true
  github-token:
    description: 'GitHub token.'
    required: true

runs:
  using: "composite"
  steps:
    - name: build the stack
      shell: bash
      run: docker-compose ${{ inputs.compose-config-args }} up -d --build

    - name: tear down the stack
      shell: bash
      run: docker-compose ${{ inputs.compose-config-args }} down

    - name: setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ inputs.tf-version }}
        cli_config_credentials_token: ${{ inputs.tf-api-token }}

    - name: install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ inputs.ssh-key }}
        name: id_rsa # optional
        known_hosts: unnecessary
        if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)

    - name: add known hosts
      shell: bash
      run: ssh-keyscan -H ${{ inputs.droplet-host }} >> ~/.ssh/known_hosts

    - name: initialize terraform
      shell: bash
      run: make init-${{ inputs.env }} TF_FLAGS="-input=false"

    - name: plan terraform
      id: plan
      continue-on-error: true
      shell: bash
      run: make plan-${{ inputs.env }}="-input=false -no-color"

    - name: post plan to github PR
      uses: mshick/add-pr-comment@v1
      with:
        allow-repeats: true
        repo-token: ${{ inputs.github-token }}
        repo-token-user-login: 'github-actions[bot]'
        message: |
          ```diff
          ${{ steps.plan.outputs.stdout }}
          ```

    - name: fail if plan fails
      if: steps.plan.outcome == 'failure'
      shell: bash
      run: exit 1
